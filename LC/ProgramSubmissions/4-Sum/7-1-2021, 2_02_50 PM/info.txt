{"id":515768289,"lang":"python3","time":"1Â year","timestamp":1625128370,"status_display":"Accepted","runtime":"824 ms","url":"/submissions/detail/515768289/","is_pending":"Not Pending","title":"4Sum","memory":"14.1 MB","code":"class Solution:\n    def fourSum(self, nums: List[int], target: int) -> List[List[int]]:\n        nums.sort()\n        i = 0\n        L = len(nums)\n        res = []\n        while i < L-3:\n            j = i+1\n            while j < L-2:\n                left = j+1\n                right = L-1\n                new_target = target-nums[i]-nums[j]\n                while left<right:\n                    if nums[left]+nums[right] > new_target:\n                        right-=1\n                    elif nums[left]+nums[right] < new_target:\n                        left+=1\n                    else:\n                        res.append([nums[i],nums[j],nums[left],nums[right]])\n                        temp_left = nums[left]\n                        temp_right = nums[right]\n                        while(left<right and nums[left]==temp_left):\n                            left+=1\n                        while(left<right and nums[right]==temp_right):\n                            right-=1\n                while j < L-3 and nums[j] == nums[j+1]:\n                    j+=1\n                j+=1\n            while i < L-4 and nums[i] == nums[i+1]:\n                i+=1\n            i+=1\n        return res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"4sum"}